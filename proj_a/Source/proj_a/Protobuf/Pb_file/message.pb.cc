// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto
// Protobuf C++ Version: 5.26.1

#include "message.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Message::Message(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;
static ::_pb::Metadata file_level_metadata_message_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_message_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_message_2eproto = nullptr;
const ::uint32_t
    TableStruct_message_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Message, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::Message, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::Message, _impl_.message_type_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Message)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_Message_default_instance_._instance,
};
const char descriptor_table_protodef_message_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rmessage.proto\032\016movement.proto\032\025player_"
    "position.proto\"d\n\007Message\022\035\n\010movement\030\001 "
    "\001(\0132\t.MovementH\000\022*\n\017player_position\030\002 \001("
    "\0132\017.PlayerPositionH\000B\016\n\014message_typeb\006pr"
    "oto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_message_2eproto_deps[2] =
    {
        &::descriptor_table_movement_2eproto,
        &::descriptor_table_player_5fposition_2eproto,
};
static ::absl::once_flag descriptor_table_message_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_message_2eproto = {
    false,
    false,
    164,
    descriptor_table_protodef_message_2eproto,
    "message.proto",
    &descriptor_table_message_2eproto_once,
    descriptor_table_message_2eproto_deps,
    2,
    1,
    schemas,
    file_default_instances,
    TableStruct_message_2eproto::offsets,
    file_level_metadata_message_2eproto,
    file_level_enum_descriptors_message_2eproto,
    file_level_service_descriptors_message_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_message_2eproto_getter() {
  return &descriptor_table_message_2eproto;
}
// ===================================================================

class Message::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::Message, _impl_._oneof_case_);
};

void Message::set_allocated_movement(::Movement* movement) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message_type();
  if (movement) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(movement)->GetArena();
    if (message_arena != submessage_arena) {
      movement = ::google::protobuf::internal::GetOwnedMessage(message_arena, movement, submessage_arena);
    }
    set_has_movement();
    _impl_.message_type_.movement_ = movement;
  }
  // @@protoc_insertion_point(field_set_allocated:Message.movement)
}
void Message::clear_movement() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_type_case() == kMovement) {
    if (GetArena() == nullptr) {
      delete _impl_.message_type_.movement_;
    }
    clear_has_message_type();
  }
}
void Message::set_allocated_player_position(::PlayerPosition* player_position) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message_type();
  if (player_position) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(player_position)->GetArena();
    if (message_arena != submessage_arena) {
      player_position = ::google::protobuf::internal::GetOwnedMessage(message_arena, player_position, submessage_arena);
    }
    set_has_player_position();
    _impl_.message_type_.player_position_ = player_position;
  }
  // @@protoc_insertion_point(field_set_allocated:Message.player_position)
}
void Message::clear_player_position() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_type_case() == kPlayerPosition) {
    if (GetArena() == nullptr) {
      delete _impl_.message_type_.player_position_;
    }
    clear_has_message_type();
  }
}
Message::Message(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Message::Message(
    ::google::protobuf::Arena* arena,
    const Message& from)
    : ::google::protobuf::Message(arena) {
  Message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (message_type_case()) {
    case MESSAGE_TYPE_NOT_SET:
      break;
      case kMovement:
        _impl_.message_type_.movement_ = ::google::protobuf::Message::CopyConstruct<::Movement>(arena, *from._impl_.message_type_.movement_);
        break;
      case kPlayerPosition:
        _impl_.message_type_.player_position_ = ::google::protobuf::Message::CopyConstruct<::PlayerPosition>(arena, *from._impl_.message_type_.player_position_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Message::~Message() {
  // @@protoc_insertion_point(destructor:Message)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_message_type()) {
    clear_message_type();
  }
  _impl_.~Impl_();
}

void Message::clear_message_type() {
// @@protoc_insertion_point(one_of_clear_start:Message)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (message_type_case()) {
    case kMovement: {
      if (GetArena() == nullptr) {
        delete _impl_.message_type_.movement_;
      }
      break;
    }
    case kPlayerPosition: {
      if (GetArena() == nullptr) {
        delete _impl_.message_type_.player_position_;
      }
      break;
    }
    case MESSAGE_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_TYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
Message::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Message, _impl_._cached_size_),
              false,
          },
          &Message::MergeImpl,
          &Message::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:Message)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> Message::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Message_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Message>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .Movement movement = 1;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.message_type_.movement_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .PlayerPosition player_position = 2;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.message_type_.player_position_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Movement>()},
    {::_pbi::TcParser::GetTable<::PlayerPosition>()},
  }}, {{
  }},
};

::uint8_t* Message::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (message_type_case()) {
    case kMovement: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.message_type_.movement_, _impl_.message_type_.movement_->GetCachedSize(), target, stream);
      break;
    }
    case kPlayerPosition: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.message_type_.player_position_, _impl_.message_type_.player_position_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Message)
  return target;
}

::size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_type_case()) {
    // .Movement movement = 1;
    case kMovement: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.message_type_.movement_);
      break;
    }
    // .PlayerPosition player_position = 2;
    case kPlayerPosition: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.message_type_.player_position_);
      break;
    }
    case MESSAGE_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Message::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_message_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kMovement: {
        if (oneof_needs_init) {
          _this->_impl_.message_type_.movement_ =
              ::google::protobuf::Message::CopyConstruct<::Movement>(arena, *from._impl_.message_type_.movement_);
        } else {
          _this->_impl_.message_type_.movement_->MergeFrom(from._internal_movement());
        }
        break;
      }
      case kPlayerPosition: {
        if (oneof_needs_init) {
          _this->_impl_.message_type_.player_position_ =
              ::google::protobuf::Message::CopyConstruct<::PlayerPosition>(arena, *from._impl_.message_type_.player_position_);
        } else {
          _this->_impl_.message_type_.player_position_->MergeFrom(from._internal_player_position());
        }
        break;
      }
      case MESSAGE_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message::IsInitialized() const {
  return true;
}

void Message::InternalSwap(Message* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_type_, other->_impl_.message_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_message_2eproto_getter,
                                   &descriptor_table_message_2eproto_once,
                                   file_level_metadata_message_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_message_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
